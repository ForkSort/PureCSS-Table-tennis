* {
    margin: 0 auto;
    box-sizing: border-box;
/*     border: 2px dotted red; */
}
html {
    font-family: "Courier New", Courier, monospace;
    font-size: 1rem;
}
body {
    background-color: #024;
    /* hide scrollbar: */
    width: 100vw;
    overflow: hidden;
    transform: scale(3) translateY(35%);
}
h1 {
    font-size: 1rem;
    margin: 1em;
    color: #0F0;
    text-shadow: 2px 1px 1px #080;
    position: fixed;
    left: 40%;
    z-index: 1;
}
.header-container {
    /* prevents rest of the content from jumping when h1 content gets created */
    min-height: 3rem; 
}
/* header animations */
.header-container > h1::after {
    /* blinking cursor */
    content: "";
    animation-iteration-count: 15;
    animation-duration: 1s;
    animation-fill-mode: backwards;
    animation-name: headerCursor;
}
.header-container > h1::before {
    /* print the header text with 'type-writer-effect' */
    content: "";
    animation-delay: 2s;
    animation-duration: 13s;
    animation-fill-mode: forwards;
    animation-name: headerTyping;
}
@keyframes headerCursor {
    from { 
        content: "|"
    }
    to {
        content: ""
    }
}
@keyframes headerTyping {
    from {
        content: "T";
    }
    2% {
        content: "Ta";
    }
    5% {
        content: "Tab";
    }
    10% {
        content: "Tabl";
    }
    15% {
        content: "Table";
    }
    20% {
        content: "Table ";
    }
    25% {
        content: "Table t";
    }
    30% {
        content: "Table te";
    }
    35% {
        content: "Table ten";
    }
    40% {
        content: "Table tenn";
    }
    45% {
        content: "Table tenni";
    }
    50% {
        content: "Table tennis";
    }
    52% {
        content: "Table tennis ";
    }
    55% {
        content: "Table tennis i";
    }
    57% {
        content: "Table tennis in";
    }
    60% {
        content: "Table tennis in p";
    }
    65% {
        content: "Table tennis in pu";
    }
    70% {
        content: "Table tennis in pur";
    }
    75% {
        content: "Table tennis in pure";
    }
    77% {
        content: "Table tennis in pure-";
    }
    80% {
        content: "Table tennis in pure-C";
    }
    82% {
        content: "Table tennis in pure-CS";
    }
    85% {
        content: "Table tennis in pure-CSS";
        opacity: 1.0;
    }
    to {
        content: "Table tennis in pure-CSS";
        opacity: 0.0;
    }
}
main {
    /* start rotation-animation for the main container */
    animation: alterPerspective 30s infinite alternate;
    animation-delay: 1s;
}
/* table rotation-animation */
.table {
    height: 200px;
    width: 300px;
    position: relative;
    display: flex;
    flex-flow: no-wrap;
    outline: 2px solid rgba(255,255,255,0.15);
    border-radius: 2px;
    box-shadow: rgba(23, 23, 22, 0.35) 0px 4px 50px 4px inset, rgb(10, 37, 65) 0px 0px 5px 4px inset, rgba(0, 0, 0, 0.35) 0px 4px 10px 4px;
    animation: rotate-table 16s infinite alternate;
    animation-delay: 15s;
}
@keyframes rotate-table { /* rotate the table */
    to {
        transform: rotateZ(-180deg);
    }
}
.table-ext-shadows { /* shadows outside the table */
    width: 100%;
    box-shadow: rgba(20, 0, 0, 0.35) 10px 10px 25px 960px, rgba(90, 0, 10, 0.35) -10px -10px 55px 10px;
}
.table-line { /* grey-line across the table */
    width: 100%;
    height: 50%;
    border-bottom: 2px solid rgba(255,255,255,0.05);
}
.table-net { /* table-net */
    width: 30px;
    height: 200px;
    position: absolute;
    top: 0%;
    left: 45%;
    transform: perspective(1000px) rotateY(81deg); /* adjust perspective and rotate */
    /* using a mixture of gradients with low opacity to make it look like a net */
    opacity: 0.28;
    background-image: linear-gradient(rgb(155, 155, 155) 1px, transparent 1px), linear-gradient(to left, rgb(255, 255, 255) 1px, rgba(0, 0, 0,0.0) 1px);
    background-size: 6px 2px;
    box-shadow: #000 30px 0px 4px -4px;
}
.arm { /* common settings for both rackets */
    background-color: orange;
    box-shadow: 2px 1px 1px #F80 inset;
}
.arm-left {
    position: relative;
    float: left;
    margin-left: 0;
    top: 55%;
    background-color: black;
    height: 50px;
    width: 4px;
    transform-origin: top right;
    box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
    /* left-racket animation instructions */
    animation: 2s cubic-bezier(.17,.84,.44,1) 15000ms infinite alternate none running rotate-left;
}
.arm-left > div { /* the end part of the left-racket */
    position: relative;
    top: 50%;
    right: 5px;
    background-color: darkred;
    box-shadow: 1px 0px 1px #F80 inset, 2px 0px 1px #F00 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
    height: 25px;
    width: 15px;
    border-radius: 50%;
}
.arm-right {
    position: relative;
    float: right;
    margin-right: 0;
    top: 25%;
    background-color: black;
    height: 50px;
    width: 4px;
    box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
    /* right-racket animation instructions, had to use different settings & timing compared to the left-hand */
    animation: 2s cubic-bezier(.23,1,.32,1) 17150ms infinite alternate none running rotate-right;
    transform-origin: bottom right;
}
.arm-right > div { /* the end part of the right-racket */
    position: relative;
    top: -5%;
    right: 7px;
    background-color: darkred;
    box-shadow: -1px 0px 1px #F80 inset, -2px 0px 1px #F00 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
    height: 25px;
    width: 15px;
    border-radius: 50%;
}
.ball {
    z-index: 1; /* move to front */
    position: relative;
    top: 75%;
    float: left;
    height: 5px;
    width: 5px;
    border-radius: 50%;
    background-color: #fff;
    box-shadow: -1px -1px 1px #000 inset, rgba(0, 0, 0, 0.65) 8px 8px 1px; 
    /* ball animation instructions */
    animation: ball-move 2s infinite alternate;
    animation-timing-function: linear;
    animation-delay: 15350ms;
}

@keyframes rotate-left {
    /* left-racket hit animation */
    from { 
        transform: rotate(60deg);
        box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
    }
    to {
        box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) -2px 2px 1px;
        transform: rotate(-60deg);
    }
}
@keyframes rotate-right {
    /* right-racket hit animation */
    from {
        box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
        transform: rotate(60deg);
    }
    to {
        box-shadow: 3px 0px 2px #F80 inset, rgba(0, 0, 0, 0.65) 2px 8px 1px;
        transform: rotate(-60deg);
    }
}
@keyframes ball-move {
    from {
        transform: translate(0, 0);
        box-shadow: -1px -1px 1px #000 inset, rgba(0, 0, 0, 0.65) 8px 8px 1px;
        height: 9px; /* rescale to give the ball a 'squeeshy effect' when hit */
        width: 3px;
    }
    5% {
        height: 5px; /* reset scale */
        width: 5px;
    }
    50% {
        /* move shadows in opposite direction of 'from/to' makes it look as if the ball hits the table */
        box-shadow: -1px -1px 1px #000 inset, rgba(0, 0, 0, 0.65) -12px -12px 1px; 
    }
    95% {
        height: 5px; /* reset scale */
        width: 5px;
    }
    to {
        height: 9px;
        width: 3px;
        transform: translate(300px, -100px); /* << the only change between from & to */
        box-shadow: -1px -1px 1px #000 inset, rgba(0, 0, 0, 0.65) 8px 8px 1px; 
    }
}
@keyframes alterPerspective {
    /* camera effects on the main element, zoom out and in and rotate around (this asyncronously chains with rotate-table animation) */
    from {
        transform: perspective(900px) rotateX(5deg) rotateZ(0deg) rotateY(5deg);
    }
    to {
        transform: perspective(160px) rotateX(40deg) rotateZ(360deg) rotateY(-5deg);
    }
}
